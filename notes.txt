main.cpp (controller) -> assert players > 1; initialize and start the game

model:
    card.hpp [done]
    deckOfCards.hpp [done] 
    player.hpp
    game.hpp

    player.hpp
    -----------
    actions: pickFromDeck, playFromHand, rearrangeHand, summary

    game.hpp
    ----------
    add rules for crazy eights gameplay
    cycle through players, allowing each make a move
    game ends when first player gets an empty hand
    


    IN PROGRESS

    DONE
    [deck] popCard() => give out a card
    [deck] pushCards(deque<Card*>) => return cards to deck -> shuffle
    [card] remove union. change to polymorphic class
    [deck] initialize deck with 52 cards -> shuffle cards
    [game] game() asks deck() for a hand and constructs a player with that hand.
    [player] add printHand() to list cards in hand
    [player] add swapInHand(index1, index2) to allow reordering cards in hand
    [game] summarizePlayers(): {playerName, numCardsInHand}